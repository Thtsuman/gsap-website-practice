{"version":3,"sources":["main.c6a82108.chunk.css","App.scss","../components/Headers/headers.scss","breakpoints.scss","varibles.scss","../components/Banner/banner.scss","../components/Cases/cases.scss","../components/IntroOverlay/introOverlay.scss"],"names":[],"mappings":"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","file":"main.c6a82108.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700&display=swap);\n.headers{position:fixed;width:100%;height:128px;z-index:4}@media(max-width: 425px){.headers{height:96px}}.headers .logo a{font-size:1.2rem;letter-spacing:.5rem;color:#000;text-decoration:none;font-weight:700}.headers .nav{width:25px}@media(max-width: 425px){.headers .nav{width:20px}}.headers .nav span{margin-bottom:.3rem;background:#000;height:2px;width:100%;display:block}.main{height:50vh;height:calc(1vh*50);height:calc(var(--vh, 1vh)*50);background-color:#fff}.main .row{flex-direction:column;justify-content:center}.main .row h2{font-size:3rem;line-height:4.2rem;font-weight:700;z-index:10;color:#fff;mix-blend-mode:difference}@media(max-width: 768px){.main .row h2{font-size:2.4rem;line-height:3rem}}@media(max-width: 425px){.main .row h2{margin-top:72px;font-size:1.7rem;line-height:2.2rem}}.main .row h2 .line{margin-bottom:8px;height:56px;position:relative;overflow:hidden}@media(max-width: 768px){.main .row h2 .line{height:48px}}@media(max-width: 425px){.main .row h2 .line{height:32px}}.main .row h2 .line span{position:absolute}.main .row .btn-row{width:256px;position:relative;z-index:2}.main .row .btn-row a{display:inline-block;font-size:1.6rem;color:#000;text-decoration:none;display:flex;align-items:center;font-weight:600}@media(max-width: 768px){.main .row .btn-row a{font-size:1.3rem}}@media(max-width: 425px){.main .row .btn-row a{font-size:1.1rem}}.main .row .btn-row a svg{margin-left:16px;border:2px solid #000;padding:12px;height:24px;width:24px;border-radius:100px;-webkit-transition:.2s ease-in-out;transition:.2s ease-in-out}@media(max-width: 768px){.main .row .btn-row a svg{padding:6px;width:20px;height:20px}}@media(max-width: 425px){.main .row .btn-row a svg{padding:4px;width:16px;height:16px}}.main .row .btn-row a:hover svg{background:#000;color:#fff}.cases{height:50vh;height:calc(1vh*50);height:calc(var(--vh, 1vh)*50)}.cases .cases-navigation{position:absolute;bottom:0px;width:100%;display:flex;justify-content:space-between;align-items:center;z-index:6;padding:32px;box-sizing:border-box}@media(max-width: 768px){.cases .cases-navigation{display:none}}.cases .cases-navigation .cases-arrow{background:rgba(0,0,0,.4);height:72px;width:72px;border-radius:100%;display:flex;align-items:center;justify-content:center}.cases .cases-navigation .cases-arrow svg{color:#fff;height:28px;width:28px}.cases .cases-navigation .cases-arrow.disabled{opacity:.3}@media(max-width: 768px){.cases .row{flex-direction:column}}.cases .row .case{position:relative;background:#000;cursor:pointer}.cases .row .case:hover .case-image{opacity:.2}.cases .row .case .case-details{width:33.333vw;height:50vh;height:calc(1vh*50);height:calc(var(--vh, 1vh)*50);display:flex;flex-direction:column;justify-content:center;padding:32px;box-sizing:border-box;z-index:1;position:relative}@media(max-width: 768px){.cases .row .case .case-details{width:100vw}}@media(max-width: 425px){.cases .row .case .case-details{padding:16px}}.cases .row .case .case-details span{margin-top:156px;font-size:1.6rem;opacity:.8rem;color:#fff;font-weight:600}@media(max-width: 1366px)and (min-width: 769px){.cases .row .case .case-details span{font-size:1.4rem}}@media(max-width: 425px){.cases .row .case .case-details span{font-size:1.2rem;line-height:2.2rem}}.cases .row .case .case-details h2{font-size:2.4rem;line-height:3.4rem;width:85%;margin-top:16px;color:#fff}@media(max-width: 1366px)and (min-width: 769px){.cases .row .case .case-details h2{font-size:2rem;line-height:2.4rem}}@media(max-width: 425px){.cases .row .case .case-details h2{font-size:1.7rem;line-height:2.2rem;margin-top:8px}}.cases .row .case .case-image{top:0;left:0;width:100%;height:100%;overflow:hidden;position:absolute;opacity:.45;-webkit-transition:.4s cubic-bezier(0.6, -0.05, 0.1, 0.99);transition:.4s cubic-bezier(0.6, -0.05, 0.1, 0.99)}.cases .row .case .case-image img{width:100%;height:100%;object-fit:cover}.intro-overlay .top{height:50vh;height:calc(1vh*50);height:calc(var(--vh, 1vh)*50);position:absolute;width:100%;z-index:8}.intro-overlay .top .overlay-top{position:absolute;height:100%;width:33.333vw;background:#000;bottom:0;left:0;right:0}@media(max-width: 768px){.intro-overlay .top .overlay-top{width:100vw}}.intro-overlay .top .overlay-top:nth-child(2){left:33.333%}@media(max-width: 768px){.intro-overlay .top .overlay-top:nth-child(2){display:none}}.intro-overlay .top .overlay-top:nth-child(3){left:66.666%}@media(max-width: 768px){.intro-overlay .top .overlay-top:nth-child(3){display:none}}.intro-overlay .bottom{height:50vh;height:calc(1vh*50);height:calc(var(--vh, 1vh)*50);position:absolute;width:100%;z-index:8;bottom:0}.intro-overlay .bottom .overlay-bottom{position:absolute;height:100%;width:33.333vw;background:#000;bottom:0;right:66.666%}@media(max-width: 768px){.intro-overlay .bottom .overlay-bottom{right:0;width:100vw}}.intro-overlay .bottom .overlay-bottom:nth-child(2){right:33.333%}@media(max-width: 768px){.intro-overlay .bottom .overlay-bottom:nth-child(2){width:100vw;top:100%;right:0}}.intro-overlay .bottom .overlay-bottom:nth-child(3){right:0}@media(max-width: 768px){.intro-overlay .bottom .overlay-bottom:nth-child(3){width:100vw;top:200%}}body,html{visibility:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;-ms-scroll-chaining:none;overscroll-behavior:none;margin:0;font-family:\"Josefin Sans\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.container{width:1560px;min-width:1560px;margin:0 auto;height:100%}@media(max-width: 1560px){.container{width:1280px;min-width:1280px}}@media(max-width: 1366px){.container{width:1080px;min-width:1080px}}@media(max-width: 1080px){.container{width:100%;min-width:100%}}.container .row{display:flex;height:100%;padding:0 32px}@media(max-width: 425px){.container .row{padding:0 16px}}.container .v-center{align-items:center}.container .space-between{justify-content:space-between}.container-fluid{width:100%;height:100%}.container-fluid .row{display:flex;height:100%}\n","@import url(\"https://fonts.googleapis.com/css?family=Josefin+Sans:400,600,700&display=swap\");\r\n@import \"./varibles.scss\";\r\n@import \"./breakpoints.scss\";\r\n@import \"../components/Headers/headers.scss\";\r\n@import \"../components/Banner/banner.scss\";\r\n@import \"../components/Cases/cases.scss\";\r\n@import \"../components/IntroOverlay/introOverlay.scss\";\r\n\r\nbody,\r\nhtml {\r\n  visibility: hidden;\r\n  user-select: none;\r\n  background: $white;\r\n  overscroll-behavior: none;\r\n  margin: 0;\r\n  font-family: \"Josefin Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\r\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n    \"Helvetica Neue\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.container {\r\n  width: 1560px;\r\n  min-width: 1560px;\r\n  margin: 0 auto;\r\n  height: 100%;\r\n  @include media(\"<=1560px\") {\r\n    width: 1280px;\r\n    min-width: 1280px;\r\n  }\r\n  @include media(\"<=desktop\") {\r\n    width: 1080px;\r\n    min-width: 1080px;\r\n  }\r\n  @include media(\"<=1080px\") {\r\n    width: 100%;\r\n    min-width: 100%;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    height: 100%;\r\n    padding: 0 32px;\r\n    @include media(\"<=phone\") {\r\n      padding: 0 16px;\r\n    }\r\n  }\r\n  .v-center {\r\n    align-items: center;\r\n  }\r\n  .space-between {\r\n    justify-content: space-between;\r\n  }\r\n}\r\n\r\n.container-fluid {\r\n  width: 100%;\r\n  height: 100%;\r\n  .row {\r\n    display: flex;\r\n    height: 100%;\r\n  }\r\n}\r\n",".headers {\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 128px;\r\n    z-index: 4;\r\n\r\n    @include media('<=phone') {\r\n        height: 96px;\r\n    }\r\n\r\n    .logo {\r\n        a {\r\n            font-size: 1.2rem;\r\n            letter-spacing: 0.5rem;\r\n            color: $black;\r\n            text-decoration: none;\r\n            font-weight: 700;\r\n        }\r\n    }   \r\n    .nav {\r\n        width: 25px;\r\n\r\n        @include media(\"<=phone\") {\r\n            width: 20px\r\n        }\r\n\r\n        span {\r\n            margin-bottom: .3rem;\r\n            background: $black;\r\n            height: 2px;\r\n            width: 100%;\r\n            display: block;\r\n        }\r\n    }\r\n}","$breakpoints: (\r\n  \"phone\": 425px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n","$black: #000000;\r\n$white: #ffffff;\r\n",".main {\r\n    height: 50vh; // fallback options\r\n    height: calc(var(--vh, 1vh) * 50);\r\n    background-color: $white;\r\n\r\n    .row {\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        h2 {\r\n            font-size: 3rem;\r\n            line-height: 4.2rem;\r\n            font-weight: 700;\r\n            z-index: 10;\r\n            color: $white;\r\n            mix-blend-mode: difference;\r\n\r\n            @include media('<=tablet') {\r\n                font-size: 2.4rem;\r\n                line-height: 3rem;\r\n            }\r\n            @include media('<=phone') {\r\n                margin-top: 72px;\r\n                font-size: 1.7rem;\r\n                line-height: 2.2rem;\r\n            }\r\n\r\n            .line {\r\n                margin-bottom: 8px;\r\n                height: 56px; \r\n                position: relative;\r\n                overflow: hidden;\r\n\r\n                @include media('<=tablet') {\r\n                    height: 48px;\r\n                }\r\n                @include media('<=phone') {\r\n                    height: 32px;\r\n                }\r\n\r\n                span {\r\n                    position: absolute;\r\n                }\r\n            }\r\n        }\r\n        .btn-row {\r\n            width: 256px;\r\n            position: relative;\r\n            z-index: 2;\r\n\r\n            a {\r\n                display: inline-block;\r\n                font-size: 1.6rem;\r\n                color: $black;\r\n                text-decoration: none;\r\n                display: flex;\r\n                align-items: center;\r\n                font-weight: 600;\r\n                \r\n                @include media('<=tablet') {\r\n                    font-size: 1.3rem;\r\n                }\r\n                @include media('<=phone') {\r\n                    font-size: 1.1rem;\r\n                }\r\n\r\n                svg {\r\n                    margin-left: 16px;\r\n                    border: 2px solid $black; \r\n                    padding: 12px;\r\n                    height: 24px;\r\n                    width: 24px;\r\n                    border-radius: 100px;\r\n                    transition: .2s ease-in-out;\r\n\r\n                    @include media('<=tablet') {\r\n                        padding: 6px;\r\n                        width: 20px;\r\n                        height: 20px;\r\n                    }\r\n                    @include media('<=phone') {\r\n                        padding: 4px;\r\n                        width: 16px;\r\n                        height: 16px;\r\n                    }\r\n                }  \r\n                \r\n                &:hover {\r\n                    svg {\r\n                        background: $black;\r\n                        color: $white;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".cases {\r\n    height: 50vh;\r\n    height: calc(var(--vh, 1vh) * 50);\r\n\r\n    .cases-navigation {\r\n        position: absolute;\r\n        bottom: 0px;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        z-index: 6;\r\n        padding: 32px;\r\n        box-sizing: border-box;\r\n\r\n        @include media(\"<=tablet\") {\r\n            display: none;\r\n        }\r\n\r\n        .cases-arrow {\r\n            background: rgba(0, 0, 0, 0.4);\r\n            height: 72px;\r\n            width: 72px;\r\n            border-radius: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n\r\n            svg {\r\n                color: $white;\r\n                height: 28px;\r\n                width: 28px;\r\n            }\r\n            &.disabled {\r\n                opacity: 0.3;\r\n            }\r\n        }\r\n    }\r\n\r\n    .row {\r\n        @include media(\"<=tablet\") {\r\n            flex-direction: column;\r\n        }\r\n\r\n        .case {\r\n            position: relative;\r\n            background: $black;\r\n            cursor: pointer;\r\n\r\n            &:hover {\r\n                .case-image {\r\n                    opacity: 0.2;\r\n                }\r\n            }\r\n\r\n            .case-details {\r\n                width: 33.333vw;\r\n                height: 50vh;\r\n                height: calc(var(--vh, 1vh) * 50);\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                padding: 32px;\r\n                box-sizing: border-box;\r\n                z-index: 1;\r\n                position: relative;\r\n\r\n                @include media(\"<=tablet\") {\r\n                    width: 100vw;\r\n                }\r\n                @include media(\"<=phone\") {\r\n                    padding: 16px;\r\n                }\r\n\r\n                span {\r\n                    margin-top: 156px;\r\n                    font-size: 1.6rem;\r\n                    opacity: 0.8rem;\r\n                    color: $white;\r\n                    font-weight: 600;\r\n\r\n                    @include media(\"<=desktop\", \">tablet\") {\r\n                        font-size: 1.4rem;\r\n                    }\r\n                    @include media(\"<=phone\") {\r\n                        font-size: 1.2rem;\r\n                        line-height: 2.2rem;\r\n                    }\r\n                }\r\n\r\n                h2 {\r\n                    font-size: 2.4rem;\r\n                    line-height: 3.4rem;\r\n                    width: 85%;\r\n                    margin-top: 16px;\r\n                    color: $white;\r\n\r\n                    @include media(\"<=desktop\", \">tablet\") {\r\n                        font-size: 2rem;\r\n                        line-height: 2.4rem;\r\n                    }\r\n                    @include media(\"<=phone\") {\r\n                        font-size: 1.7rem;\r\n                        line-height: 2.2rem;\r\n                        margin-top: 8px;\r\n                    }\r\n                }\r\n            }\r\n            .case-image {\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: hidden;\r\n                position: absolute;\r\n                opacity: 0.45;\r\n                transition: 0.4s cubic-bezier(0.6, -0.05, 0.1, 0.99);\r\n\r\n                img {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    object-fit: cover;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",".intro-overlay {\r\n    .top {\r\n        height: 50vh;\r\n        height: calc(var(--vh, 1vh) * 50);\r\n        position: absolute;\r\n        width: 100%;\r\n        z-index: 8;\r\n\r\n        .overlay-top {\r\n            position: absolute;\r\n            height: 100%;\r\n            width: 33.333vw;\r\n            background: $black;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n\r\n            @include media(\"<=tablet\") {\r\n                width: 100vw;\r\n            }\r\n            &:nth-child(2) {\r\n                left: 33.333%;\r\n                @include media(\"<=tablet\") {\r\n                    display: none;\r\n                }\r\n            }\r\n            &:nth-child(3) {\r\n                left: 66.666%;\r\n                @include media(\"<=tablet\") {\r\n                    display: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .bottom {\r\n        height: 50vh;\r\n        height: calc(var(--vh, 1vh) * 50);\r\n        position: absolute;\r\n        width: 100%;\r\n        z-index: 8;\r\n        bottom: 0;\r\n        .overlay-bottom {\r\n            position: absolute;\r\n            height: 100%;\r\n            width: 33.333vw;\r\n            background: $black;\r\n            bottom: 0;\r\n            right: 66.666%;\r\n\r\n            @include media(\"<=tablet\") {\r\n                right: 0;\r\n                width: 100vw;\r\n            }\r\n            &:nth-child(2) {\r\n                right: 33.333%;\r\n                @include media(\"<=tablet\") {\r\n                    width: 100vw;\r\n                    top: 100%;\r\n                    right: 0;\r\n                }\r\n            }\r\n            &:nth-child(3) {\r\n                right: 0;\r\n                @include media(\"<=tablet\") {\r\n                    width: 100vw;\r\n                    top: 200%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}